spring.application.name=PAYMENT-SERVICE
server.port=8086

# -----------------------------
# Datasource Properties
# -----------------------------
spring.datasource.url=jdbc:postgresql://localhost:5432/Payment
spring.datasource.username=postgres
spring.datasource.password=root


# -----------------------------
# Hibernate Properties
# -----------------------------
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.format_sql=true

# -----------------------------
# Eureka Client Configuration
# -----------------------------
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# -----------------------------
# Kafka Consumer Configuration
# -----------------------------
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

#Trusted package
spring.kafka.consumer.properties.spring.json.trusted.packages=*


# -----------------------------
# Kafka Consumer Configuration
# -----------------------------
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer


# Prevent Kafka producer from adding class metadata in headers
spring.kafka.producer.properties.spring.json.add.type.headers=false


# -----------------------------
# Kafka Topic Names - Separate Topics for Different Event Types
# -----------------------------
kafka.topics.payment.request=payment.request
kafka.topics.payment.response=payment.response
kafka.consumer.group.id=payment-group


# -----------------------------
# Stripe Config
# -----------------------------

stripe.success.url=http://localhost:8086/webhook/success
stripe.cancel.url=http://localhost:8086/webhook/cancel



