spring.application.name=ORDER-SERVICE
server.port=8081


#Database related things
spring.datasource.url=jdbc:postgresql://localhost:5432/order_service_db
spring.datasource.username=postgres
spring.datasource.password=root

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.format_sql=true


# -----------------------------
# Eureka Client Configuration
# -----------------------------
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# -----------------------------
# Kafka  Configuration
# -----------------------------
#kafka producer
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Prevent Kafka producer from adding class metadata in headers
spring.kafka.producer.properties.spring.json.add.type.headers=false


#Kafka Consumer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Trust packages for deserialization
spring.kafka.consumer.properties.spring.json.trusted.packages=*

#Kafka Topic Names
kafka.topics.inventory.request=inventory.request
kafka.topics.inventory.response=inventory.response
kafka.topics.payment.request=payment.request
kafka.topics.payment.response=payment.response
kafka.topics.notify.request=notify.request

#kafka Consumer Group
kafka.consumer.group.id=order-group

